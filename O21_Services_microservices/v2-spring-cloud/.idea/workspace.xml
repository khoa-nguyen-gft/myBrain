<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="ab845e79-063a-40b4-9a8c-77fa8b76fc9e" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/docker-compose/eazybank-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose/eazybank-compose.yaml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$/accounts">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/cards">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/configserver">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/eurekaserver">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/gatewayserver">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/loans">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$/accounts">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/configserver">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/loans">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/eurekaserver">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/gatewayserver">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 5
}</component>
  <component name="ProjectId" id="2ZqVq4So8JZpnOStgpHxdY8LHEv" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "Application.AccountApplication.executor": "Run",
    "Docker.docker-compose/docker-compose.yaml.accounts: Compose Deployment.executor": "Run",
    "Docker.docker-compose/docker-compose.yaml.configserver: Compose Deployment.executor": "Run",
    "Docker.docker-compose/docker-compose.yaml.eurekaserver: Compose Deployment.executor": "Run",
    "Docker.docker-compose/docker-compose.yaml.gateway: Compose Deployment.executor": "Run",
    "Docker.docker-compose/docker-compose.yaml.gatewayserver: Compose Deployment.executor": "Run",
    "Docker.docker-compose/docker-compose.yaml.loans: Compose Deployment.executor": "Run",
    "Docker.docker-compose/docker-compose.yaml.minio: Compose Deployment.executor": "Run",
    "Docker.docker-compose/docker-compose.yaml.read: Compose Deployment.executor": "Run",
    "Docker.docker-compose/docker-compose.yaml: Compose Deployment.executor": "Run",
    "Docker.docker-compose/eazybank-compose.yaml.accounts: Compose Deployment.executor": "Run",
    "Docker.docker-compose/eazybank-compose.yaml.cards: Compose Deployment.executor": "Run",
    "Docker.docker-compose/eazybank-compose.yaml.grafana: Compose Deployment.executor": "Run",
    "Docker.docker-compose/eazybank-compose.yaml.minio: Compose Deployment.executor": "Run",
    "Docker.docker-compose/eazybank-compose.yaml.read: Compose Deployment.executor": "Run",
    "Docker.docker-compose/eazybank-compose.yaml.write: Compose Deployment.executor": "Run",
    "Docker.docker-compose/eazybank-compose.yaml: Compose Deployment.executor": "Run",
    "Docker.docker-compose/grafana-compose.yaml.grafana: Compose Deployment.executor": "Run",
    "Docker.docker-compose/grafana-compose.yaml.prometheus: Compose Deployment.executor": "Run",
    "Docker.docker-compose/grafana-compose.yaml.promtail: Compose Deployment.executor": "Run",
    "Docker.docker-compose/grafana-compose.yaml.read: Compose Deployment.executor": "Run",
    "Docker.docker-compose/grafana-compose.yaml: Compose Deployment.executor": "Run",
    "Docker.evaluate-loki/docker-compose.yaml.read: Compose Deployment.executor": "Run",
    "Docker.evaluate-loki/docker-compose.yaml: Compose Deployment.executor": "Run",
    "Docker.grafana/grafana-compose.yaml: Compose Deployment.executor": "Run",
    "Gradle.Build eurekaserver.executor": "Run",
    "Gradle.Tests in 'configserver'.executor": "Run",
    "Gradle.accounts [:AccountApplication.main()].executor": "Run",
    "Gradle.accounts [bootBuildImage].executor": "Run",
    "Gradle.accounts [buildDependents].executor": "Run",
    "Gradle.accounts [build].executor": "Run",
    "Gradle.accounts [clean build bootBuildImage].executor": "Run",
    "Gradle.accounts [clean build].executor": "Run",
    "Gradle.cards [:CardsApplication.main()].executor": "Run",
    "Gradle.cards [clean build bootBuildImage].executor": "Run",
    "Gradle.cards [clean build].executor": "Run",
    "Gradle.configserver [:ConfigserverApplication.main()].executor": "Run",
    "Gradle.configserver [bootBuildImage].executor": "Run",
    "Gradle.configserver [bootJar].executor": "Run",
    "Gradle.configserver [clean build bootBuildImage].executor": "Run",
    "Gradle.configserver [clean build].executor": "Run",
    "Gradle.eurekaserver [:EurekaserverApplication.main()].executor": "Run",
    "Gradle.eurekaserver [clean build].executor": "Run",
    "Gradle.gatewayserver [:GatewayserverApplication.main()].executor": "Run",
    "Gradle.gatewayserver [bootBuildImage].executor": "Run",
    "Gradle.gatewayserver [bootRun].executor": "Run",
    "Gradle.gatewayserver [bootTestRun].executor": "Run",
    "Gradle.gatewayserver [clean build].executor": "Run",
    "Gradle.loans [:LoansApplication.main()].executor": "Run",
    "Gradle.loans [clean build bootBuildImage].executor": "Run",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "jdk.selected.JAVA_MODULE": "graalvm-17",
    "kotlin-language-version-configured": "true",
    "last_opened_file_path": "/Users/kany/project-local/myBrain/O21_Services_microservices/v2-spring-cloud/docker-compose/evaluate-loki",
    "project.structure.last.edited": "Modules",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "reference.settingsdialog.IDE.editor.postfix.templates"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/docker-compose/evaluate-loki" />
      <recent name="$PROJECT_DIR$/loans" />
      <recent name="$PROJECT_DIR$/gatewayserver" />
      <recent name="$PROJECT_DIR$/cards" />
      <recent name="$PROJECT_DIR$/accounts" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/docker-compose/grafana" />
      <recent name="$PROJECT_DIR$/docker-compose" />
      <recent name="$PROJECT_DIR$/docker-compose/observability/promtail" />
      <recent name="$PROJECT_DIR$/docker-compose/observability/loki" />
      <recent name="$PROJECT_DIR$/docker-compose/observability" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="gradle bootJar" />
      <command value="gradle clean build bootBuildImage" />
      <command value="gradle bootRun" />
      <command value="gradle bootBuildImage" />
      <command value="gradle bootTestRun" />
      <command value="gradle clean build" />
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose/eazybank-compose.yaml: Compose Deployment">
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose/eazybank-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose/eazybank-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose/grafana-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="sourceFilePath" value="docker-compose/grafana-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose/grafana-compose.yaml.grafana: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="grafana" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose/grafana-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose/grafana-compose.yaml.prometheus: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="prometheus" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose/grafana-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose/grafana-compose.yaml.read: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="read" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose/grafana-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose/eazybank-compose.yaml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose/grafana-compose.yaml: Compose Deployment" />
        <item itemvalue="Docker.docker-compose/grafana-compose.yaml.read: Compose Deployment" />
        <item itemvalue="Docker.docker-compose/grafana-compose.yaml.grafana: Compose Deployment" />
        <item itemvalue="Docker.docker-compose/grafana-compose.yaml.prometheus: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="jdk-17.0.8-graalvm-ce-17-8336523bb0d9-0f985bf9" />
        <option value="jdk-19.0.2-corretto-19.0.2-8336523bb0d9-804eb45d" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="StandaloneScriptsStorage">
    <option name="files">
      <set>
        <option value="$PROJECT_DIR$/configserver/build.gradle.kts" />
      </set>
    </option>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="ab845e79-063a-40b4-9a8c-77fa8b76fc9e" name="Changes" comment="" />
      <created>1703149784062</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1703149784062</updated>
    </task>
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
</project>